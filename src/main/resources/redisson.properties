# 连接空闲超时 如果当前连接池里的连接数量超过了最小空闲连接数，而同时有连接空闲时间超过了该数值，那么这些连接将会自动被关闭，并从连接池里去掉。时间单位是毫秒。
clusterServersConfig.idleConnectionTimeout=10000
clusterServersConfig.pingTimeout=1000
# 连接超时
clusterServersConfig.connectTimeout=10000
# 命令等待超时
clusterServersConfig.timeout=3000
# 命令失败重试次数
clusterServersConfig.retryAttempts=3
# 命令重试发送时间间隔
clusterServersConfig.retryInterval=1500
# 重新连接时间间隔
clusterServersConfig.reconnectionTimeout=3000
# failedAttempts
clusterServersConfig.failedAttempts=3
# 密码
clusterServersConfig.password=null
# 单个连接最大订阅数量
clusterServersConfig.subscriptionsPerConnection=5
# 客户端名称
clusterServersConfig.clientName=null
#负载均衡算法类的选择  默认轮询调度算法RoundRobinLoadBalancer
clusterServersConfig.loadBalancer: !<org.redisson.connection.balancer.RoundRobinLoadBalancer> {}
clusterServersConfig.slaveSubscriptionConnectionMinimumIdleSize=1
clusterServersConfig.slaveSubscriptionConnectionPoolSize=50
clusterServersConfig.slaveConnectionMinimumIdleSize=32
clusterServersConfig.slaveConnectionPoolSize=64
clusterServersConfig.masterConnectionMinimumIdleSize=32
clusterServersConfig.masterConnectionPoolSize=64
clusterServersConfig.readMode=SLAVE
clusterServersConfig.nodeAddresses[0]=redis://192.168.56.128:7000
clusterServersConfig.nodeAddresses[1]=redis://192.168.56.128:7001
clusterServersConfig.nodeAddresses[2]=redis://192.168.56.128:7002
clusterServersConfig.scanInterval=1000
threads=0
nettyThreads=0